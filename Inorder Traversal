#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>
void inorder(char ch[],int l,int h){
    if(h-l==2)printf("%c%c%c",ch[l],ch[h],ch[l+1]);
    else{
        int m=(l+h)/2;
        inorder(ch,l,m-1);
        printf("%c",ch[h]);
        inorder(ch,m,h-1);
    }
}
int main() {
    char ch[1005];
    scanf("%s",ch);
    int n=strlen(ch);
    inorder(ch,0,n-1);
    return 0;
}
//Code2

#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>
// Q 802 - Inorder Traversal Restoration
void inorder(char a[],int s, int e){
    if(e-s==2) printf("%c%c%c", a[s],a[e],a[s+1]);
    else{
        inorder(a,s,(s+e)/2-1);
        printf("%c",a[e]);
        inorder(a,(s+e)/2,e-1);
    }
}

int main() {
    char s[1005];
    scanf("%s",s);
    inorder(s,0,strlen(s)-1);
        
    return 0;
}
